@using CoachsBox.WebApp.Areas.Identity.Data
@inherits OwningComponentBase

<CascadingAuthenticationState>
  @if (this.Students.Count == 0)
  {
    <div class="m-3">
      <span>В группе нет учеников</span>
    </div>
  }

  <ul class="list-group list-group-flush">
    @foreach (var student in this.Students.OrderBy(s => s.StudentFullName))
    {
      <li class="list-group-item">
        <div class="row">
          <div class="col col-md">
            <!-- Фотка человека -->
            <div class="float-left"></div>
            <div>
              <a class="font-weight-bold" href="/Students/Details?studentId=@student.StudentId">@student.StudentFullName</a>
              <div>
                <div class="float-left mr-3">
                  <span class="small font-weight-bold">📞</span>
                  @if (!string.IsNullOrWhiteSpace(student.Phone))
                  {
                    <span class="small">@student.Phone</span>
                  }
                  else
                  {
                    <span class="small text-muted">Телефон не указан</span>
                  }
                </div>
                @if (!string.IsNullOrWhiteSpace(student.Email))
                {
                  <div class="float-left mr-3">
                    <span class="small font-weight-bold">📧</span>
                    <span class="small">@student.Email</span>
                  </div>
                }
              </div>
            </div>
          </div>
          <div class="col-auto d-flex">
            <div class="d-flex align-items-center">
              <BalanceBadge Balance="@student.GroupBalance" />
              @if (student.TrialTrainingCount > 0)
              {
                <div class="ml-2">
                  <span class="badge badge-pill badge-primary">Пробное занятие</span>
                </div>
              }

              <div class="ml-2 btn-group-sm">
                @if (this.processedStudentIds.Contains(student.StudentId))
                {
                  <button class="btn btn-sm" type="button">
                    <span class="spinner-border spinner-border-sm text-primary" role="status" aria-hidden="true"></span>
                  </button>
                }
                else
                {
                  <button class="btn btn-sm" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v text-secondary"></i>
                  </button>
                }

              <div class="dropdown-menu dropdown-menu-right">
                @if (student.TrialTrainingCount == 0)
                {
                  @if (student.CanEnableTrialTraining)
                  {
                    <button class="dropdown-item" @onclick="@(async () => await this.OnEnableTrialPeriodClick(student))">
                      <i class="fas fa-play-circle text-primary mr-2"></i>Активировать пробное занятие
                    </button>
                  }
                  else
                  {
                    <button class="dropdown-item disabled" tabindex="-1" aria-disabled="true">
                      <i class="fas fa-step-forward text-primary mr-2"></i>Пробное занятие уже проведено
                    </button>
                  }
                }
                else
                {
                  <button class="dropdown-item btn-light" @onclick="@(async () => await this.OnDisableTrialPeriodClick(student))">
                    <i class="fas fa-stop-circle text-primary mr-2"></i>Отменить пробное занятие
                  </button>
                }
                <AuthorizeView Roles="@CoachsBoxWebAppRole.Administrator">
                  <div class="dropdown-divider"></div>
                  <button class="dropdown-item" @onclick="@(async () => await this.OnExcludeStudentFromGroupClick(student))">
                    <i class="fas fa-user-times text-danger mr-2"></i>Исключить ученика из группы
                  </button>
                </AuthorizeView>
              </div>
              </div>
            </div>
          </div>
        </div>
      </li>
    }
  </ul>
</CascadingAuthenticationState>